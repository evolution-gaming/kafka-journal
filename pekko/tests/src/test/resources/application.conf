akka {
  loglevel = "WARNING"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = off
  log-dead-letters-during-shutdown = off
  persistence {
    journal.plugin = "evolutiongaming.kafka-journal.persistence.journal"
    snapshot-store.plugin = "akka.persistence.no-snapshot-store"
  }

  test {
    timefactor = 2.0
  }
}

evolutiongaming.kafka-journal {

  cassandra {
    contact-points = ["0.0.0.0"]
    client {
      reconnection {
        min-delay = 300ms
        max-delay = 1s
      }
      query.consistency = "ONE"
    }
  }

  persistence.journal {

    kafka {
      producer {
        max-request-size = 8388608
      }

      consumer {
        check-crcs = false
      }
    }

    cassandra = ${evolutiongaming.kafka-journal.cassandra}

    circuit-breaker {
      call-timeout = 1m
      reset-timeout = 2m
    }
  }

  replicator {
    topic-discovery-interval = 1s

    kafka {
      consumer {
        check-crcs = false
      }
    }

    cassandra = ${evolutiongaming.kafka-journal.cassandra}
  }
}